/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/App.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/App.ts":
/*!********************!*\
  !*** ./src/App.ts ***!
  \********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar Utils;\n(function (Utils) {\n    class ObjectUtils {\n        // -------------------------------------------------------------------------\n        static loadJson(fileName) {\n            return new Promise(function (resolve, reject) {\n                var request = new XMLHttpRequest();\n                request.open('GET', fileName, true);\n                request.responseType = 'json';\n                request.onload = function () {\n                    if (request.status === 200) {\n                        resolve(request.response);\n                    }\n                    else {\n                        reject(new Error(`Error loading ${fileName}: ${request.statusText}`));\n                    }\n                };\n                request.onerror = function () {\n                    reject(new Error(`Network error while loading ${fileName}`));\n                };\n                request.send();\n            });\n        }\n        // -------------------------------------------------------------------------\n        static loadValuesIntoObject(jsonData, targetObject) {\n            console.log(`----- loading values into ${targetObject.name} -----`);\n            for (let property in jsonData) {\n                console.log(`name = ${property}, value = ${jsonData[property]}`);\n                targetObject[property] = jsonData[property];\n            }\n            console.log(\"------------------------------------------------\");\n        }\n    }\n    Utils.ObjectUtils = ObjectUtils;\n})(Utils || (Utils = {}));\nvar Utils;\n(function (Utils) {\n    class StorageUtils {\n        // --------------------------------------------------------------------\n        static set sponsorStorage(sponsorStorage) {\n            StorageUtils._sponsorStorage = sponsorStorage;\n        }\n        // --------------------------------------------------------------------\n        static set allowMultipleRequests(allowMultipleRequests) {\n            StorageUtils._allowMultipleRequests = allowMultipleRequests;\n        }\n        // --------------------------------------------------------------------\n        static save(key, data) {\n            return __awaiter(this, void 0, void 0, function* () {\n                // check if any load/save request is still running\n                if (!StorageUtils._allowMultipleRequests && StorageUtils._requestsCounter > 0) {\n                    throw new Error(\"Previous load/save request was not finished yet\");\n                }\n                ++StorageUtils._requestsCounter;\n                // sponsor specific storage?\n                let sponsorStorage = StorageUtils._sponsorStorage;\n                if (sponsorStorage !== null) {\n                    // save\n                    yield sponsorStorage.save(key, data);\n                    // fallback set to true? Use also standard local storage?\n                    if (!sponsorStorage.fallbackToStandardStorage()) {\n                        --StorageUtils._requestsCounter;\n                        return;\n                    }\n                }\n                // standard storage\n                let storage = StorageUtils.getLocalStorage();\n                if (storage !== null) {\n                    let dataString = JSON.stringify(data);\n                    console.log(`saving key ${key}: ${dataString}`);\n                    storage.setItem(key, dataString);\n                }\n                else {\n                    --StorageUtils._requestsCounter;\n                    throw new Error(\"Standard storage not available\");\n                }\n                --StorageUtils._requestsCounter;\n            });\n        }\n        // --------------------------------------------------------------------\n        static load(key) {\n            return __awaiter(this, void 0, void 0, function* () {\n                // check if any load/save request is still running\n                if (!StorageUtils._allowMultipleRequests && StorageUtils._requestsCounter > 0) {\n                    throw new Error(\"Previous load/save request was not finished yet\");\n                }\n                ++StorageUtils._requestsCounter;\n                let data = null;\n                // sponsor specific storage?\n                let sponsorStorage = StorageUtils._sponsorStorage;\n                if (sponsorStorage !== null) {\n                    // save\n                    data = yield sponsorStorage.load(key);\n                    // if got some data (not null or undefined) or fallback to standard storage not not allowed\n                    if (data != null || !sponsorStorage.fallbackToStandardStorage()) {\n                        --StorageUtils._requestsCounter;\n                        return data;\n                    }\n                }\n                // standard storage\n                let storage = StorageUtils.getLocalStorage();\n                if (storage !== null) {\n                    let dataString = storage.getItem(key);\n                    console.log(`loading key ${key}: ${dataString}`);\n                    data = JSON.parse(dataString);\n                }\n                else {\n                    --StorageUtils._requestsCounter;\n                    throw new Error(\"Standard storage not available\");\n                }\n                --StorageUtils._requestsCounter;\n                return data;\n            });\n        }\n        // --------------------------------------------------------------------\n        static getLocalStorage() {\n            try {\n                if (\"localStorage\" in window && window[\"localStorage\"] != null) {\n                    return localStorage;\n                }\n            }\n            catch (e) {\n                return null;\n            }\n            return null;\n        }\n    }\n    StorageUtils._sponsorStorage = null;\n    StorageUtils._allowMultipleRequests = false;\n    StorageUtils._requestsCounter = 0;\n    Utils.StorageUtils = StorageUtils;\n})(Utils || (Utils = {}));\nvar Sponsor;\n(function (Sponsor) {\n    // list of all sponsors\n    let eSponsorID;\n    (function (eSponsorID) {\n        eSponsorID[eSponsorID[\"NONE\"] = 0] = \"NONE\";\n        eSponsorID[eSponsorID[\"SBC_GAMES\"] = 1] = \"SBC_GAMES\";\n    })(eSponsorID = Sponsor.eSponsorID || (Sponsor.eSponsorID = {}));\n    ;\n})(Sponsor || (Sponsor = {}));\nvar Sponsor;\n(function (Sponsor_1) {\n    /**\n     * Sponsor class is abstract adapter implementing ISponsor interface\n     */\n    class Sponsor {\n        // --------------------------------------------------------------------\n        constructor(features) {\n            this._features = null;\n            this._game = null;\n            // instance\n            Sponsor._instance = this;\n            this._features = features;\n            Sponsor_1.api = this;\n            Sponsor_1.id = features.id;\n        }\n        // --------------------------------------------------------------------\n        static get instance() {\n            // check null or undefined\n            if (Sponsor._instance == null) {\n                throw new Error(`Sponsor is ${Sponsor._instance}. Sponsor must be always initialized.`);\n            }\n            return Sponsor._instance;\n        }\n        // --------------------------------------------------------------------\n        static get initialized() {\n            return Sponsor._instance != null;\n        }\n        // --------------------------------------------------------------------\n        get id() {\n            return this.features.id;\n        }\n        // --------------------------------------------------------------------\n        get features() {\n            return this._features;\n        }\n        // --------------------------------------------------------------------\n        set game(game) {\n            this._game = game;\n        }\n        // #region Default interface implementation\n        // --------------------------------------------------------------------\n        startGameSession(...parameters) {\n            return __awaiter(this, void 0, void 0, function* () {\n                console.log(`Sponsor ${Sponsor_1.eSponsorID[this.id]}: startGameSession() with parameters ${parameters}`);\n            });\n        }\n        // --------------------------------------------------------------------\n        endGameSession(...parameters) {\n            return __awaiter(this, void 0, void 0, function* () {\n                console.log(`Sponsor ${Sponsor_1.eSponsorID[this.id]}: endGameSession() with parameters ${parameters}`);\n            });\n        }\n        // --------------------------------------------------------------------\n        submitScore(...parameters) {\n            return __awaiter(this, void 0, void 0, function* () {\n                console.log(`Sponsor ${Sponsor_1.eSponsorID[this.id]}: submitScore() with parameters ${parameters}`);\n            });\n        }\n        // --------------------------------------------------------------------\n        showAd(...parameters) {\n            return __awaiter(this, void 0, void 0, function* () {\n                console.log(`Sponsor ${Sponsor_1.eSponsorID[this.id]}: showAd() with parameters ${parameters}`);\n            });\n        }\n    }\n    Sponsor._instance = null;\n    Sponsor_1.Sponsor = Sponsor;\n})(Sponsor || (Sponsor = {}));\nvar Sponsor;\n(function (Sponsor) {\n    class SponsorNone extends Sponsor.Sponsor {\n        // --------------------------------------------------------------------\n        constructor(features) {\n            super(features);\n        }\n    }\n    Sponsor.SponsorNone = SponsorNone;\n})(Sponsor || (Sponsor = {}));\nvar Sponsor;\n(function (Sponsor) {\n    class SponsorSBCGames extends Sponsor.Sponsor {\n        // --------------------------------------------------------------------\n        constructor(features) {\n            super(features);\n            Utils.StorageUtils.sponsorStorage = this;\n        }\n        // --------------------------------------------------------------------\n        startGameSession(...parameters) {\n            return __awaiter(this, void 0, void 0, function* () {\n                console.log(`Sponsor ${Sponsor.eSponsorID[this.id]}: startGameSession() with parameters ${parameters}`);\n                yield new Promise(function (resolve) {\n                    console.log(\"starting timeout - 3 secs\");\n                    setTimeout(function () {\n                        console.log(\"timeout over\");\n                        resolve();\n                    }, 3000);\n                });\n            });\n        }\n        // --------------------------------------------------------------------\n        endGameSession(...parameters) {\n            return __awaiter(this, void 0, void 0, function* () {\n                console.log(`Sponsor ${Sponsor.eSponsorID[this.id]}: endGameSession() with parameters ${parameters}`);\n                if (typeof parameters[0] !== \"undefined\") {\n                    console.log(\"pramaters = \" + JSON.stringify(parameters[0]));\n                }\n                yield new Promise(function (resolve) {\n                    console.log(\"starting timeout - 3 secs\");\n                    setTimeout(function () {\n                        console.log(\"timeout over\");\n                        resolve();\n                    }, 3000);\n                });\n            });\n        }\n        // #region ISponsorStorage interface implementation\n        // --------------------------------------------------------------------\n        save(key, data) {\n            return __awaiter(this, void 0, void 0, function* () {\n                let storage = window.localStorage;\n                yield new Promise(function (resolve) {\n                    console.log(\"saving somewhere into cloud - it will take 3 seconds\");\n                    setTimeout(function () {\n                        console.log(\"data saved\");\n                        storage.setItem(key, JSON.stringify(data));\n                        resolve();\n                    }, 3000);\n                });\n            });\n        }\n        // --------------------------------------------------------------------\n        load(key) {\n            return __awaiter(this, void 0, void 0, function* () {\n                let storage = window.localStorage;\n                let result = yield new Promise(function (resolve) {\n                    console.log(\"loading from cloud - it will take 3 seconds\");\n                    setTimeout(function () {\n                        console.log(\"data loaded\");\n                        let data = storage.getItem(key);\n                        console.log(\"data  = \" + data);\n                        resolve(data == null ? null : JSON.parse(data));\n                    }, 3000);\n                });\n                return result;\n            });\n        }\n        // --------------------------------------------------------------------\n        fallbackToStandardStorage() {\n            return false;\n        }\n        // #endregion\n        // --------------------------------------------------------------------\n        someVerySpecificSponsorFunction() {\n            console.log(\"Very sponsor specific function for SBCGames\");\n        }\n    }\n    Sponsor.SponsorSBCGames = SponsorSBCGames;\n})(Sponsor || (Sponsor = {}));\nvar Sponsor;\n(function (Sponsor) {\n    // --------------------------------------------------------------------\n    function is(sponsorID) {\n        return Sponsor.id === sponsorID;\n    }\n    Sponsor.is = is;\n    // --------------------------------------------------------------------\n    function features() {\n        return Sponsor.api.features;\n    }\n    Sponsor.features = features;\n    // --------------------------------------------------------------------\n    function hasFeature(featureName) {\n        return typeof Sponsor.api.features[featureName] !== \"undefined\";\n    }\n    Sponsor.hasFeature = hasFeature;\n    // --------------------------------------------------------------------\n    function isFeatureOn(featureName) {\n        let featureValue = Sponsor.api.features[featureName];\n        return typeof featureValue === \"boolean\" && featureValue;\n    }\n    Sponsor.isFeatureOn = isFeatureOn;\n})(Sponsor || (Sponsor = {}));\nvar App;\n(function (App) {\n    class Settings {\n        constructor() {\n            // music and sound\n            this.musicOn = true;\n            this.soundOn = true;\n        }\n    }\n    App.Settings = Settings;\n})(App || (App = {}));\nvar App;\n(function (App) {\n    // define features for each single sponsor\n    App.SPONSOR_FEATURES = {\n        [Sponsor.eSponsorID.NONE]: {\n            id: Sponsor.eSponsorID.NONE,\n            name: \"none\",\n            hasConfig: false,\n            defaultLanguage: \"cs\",\n            showFlags: false\n        },\n        [Sponsor.eSponsorID.SBC_GAMES]: {\n            id: Sponsor.eSponsorID.SBC_GAMES,\n            name: \"sbc_games\",\n            hasConfig: true,\n            defaultLanguage: \"en\",\n            showFlags: true\n        }\n    };\n    // --------------------------------------------------------------------\n    function getSponsorFeatures(id) {\n        // are features for sponsor in list?\n        if (App.SPONSOR_FEATURES[id] == null) {\n            throw new Error(`Features for sponsor ${Sponsor.eSponsorID[id]} are not in SPONSOR_FEATURES list.`);\n        }\n        return App.SPONSOR_FEATURES[id];\n    }\n    App.getSponsorFeatures = getSponsorFeatures;\n})(App || (App = {}));\n/// <reference path =\"Settings.ts\" />\n/// <reference path=\"SponsorConfig.ts\" />\nvar App;\n(function (App) {\n    // sponsor\n    App.sponsor = Sponsor.eSponsorID.SBC_GAMES;\n    // game\n    App.game = null;\n    // settings\n    App.settings = new App.Settings();\n})(App || (App = {}));\n// -------------------------------------------------------------------------\nfunction launch() {\n    return __awaiter(this, void 0, void 0, function* () {\n        let sponsorFeatures = App.getSponsorFeatures(App.sponsor);\n        if (App.sponsor === Sponsor.eSponsorID.NONE) {\n            new Sponsor.SponsorNone(sponsorFeatures);\n        }\n        else if (App.sponsor === Sponsor.eSponsorID.SBC_GAMES) {\n            new Sponsor.SponsorSBCGames(sponsorFeatures);\n        }\n        // load main game config\n        try {\n            let configJson = yield Utils.ObjectUtils.loadJson(\"assets/config.json\");\n            Utils.ObjectUtils.loadValuesIntoObject(configJson, App.Config);\n        }\n        catch (e) {\n            throw e;\n        }\n        // load sponsor config if exist\n        if (Sponsor.isFeatureOn(\"hasConfig\")) {\n            try {\n                let sponsorConfigJson = yield Utils.ObjectUtils.loadJson(`assets/sponsor/${Sponsor.features().name}.json`);\n                Utils.ObjectUtils.loadValuesIntoObject(sponsorConfigJson, App.Config);\n            }\n            catch (e) {\n                throw e;\n            }\n        }\n        // create game\n        let game = new MaintainableGame.Game();\n        App.game = game;\n        // save game reference also into sponsor implementation\n        Sponsor.api.game = game;\n    });\n}\n// -------------------------------------------------------------------------\nwindow.onload = launch;\nvar App;\n(function (App) {\n    class Config {\n    }\n    // game dimensions\n    Config.GAME_WIDTH = 800;\n    Config.GAME_HEIGHT = 600;\n    // saving\n    Config.SAVE_KEY = \"maintainable_game_save\";\n    // in association with\n    Config.SPONSOR_ASSOCIATION = \"\";\n    App.Config = Config;\n})(App || (App = {}));\nvar MaintainableGame;\n(function (MaintainableGame) {\n    class Game extends Phaser.Game {\n        // --------------------------------------------------------------------\n        constructor() {\n            // default renderer\n            let renderer = Phaser.AUTO;\n            // init game\n            super({\n                type: renderer,\n                parent: \"game_content\",\n                width: App.Config.GAME_WIDTH,\n                height: App.Config.GAME_HEIGHT,\n                title: \"Maintainable Game\",\n            });\n            // states\n            this.scene.add(\"Boot\", MaintainableGame.Boot);\n            this.scene.add(\"Preloader\", MaintainableGame.Preloader);\n            this.scene.add(\"Menu\", MaintainableGame.Menu);\n            this.scene.add(\"Play\", MaintainableGame.Play);\n            // start\n            this.scene.start(\"Boot\");\n        }\n    }\n    MaintainableGame.Game = Game;\n})(MaintainableGame || (MaintainableGame = {}));\nvar MaintainableGame;\n(function (MaintainableGame) {\n    class SceneBase extends Phaser.Scene {\n        // --------------------------------------------------------------------\n        get gameWidth() {\n            return this.sys.game.config.width;\n        }\n        // --------------------------------------------------------------------\n        get gameHeight() {\n            return this.sys.game.config.height;\n        }\n        // --------------------------------------------------------------------\n        setView() {\n            // focus on center\n            this.cameras.main.centerOn(0, 0);\n        }\n    }\n    MaintainableGame.SceneBase = SceneBase;\n})(MaintainableGame || (MaintainableGame = {}));\n///<reference path = \"SceneBase.ts\" />\nvar MaintainableGame;\n(function (MaintainableGame) {\n    class Boot extends MaintainableGame.SceneBase {\n        // --------------------------------------------------------------------\n        create() {\n            console.log(\"Boot\");\n            this.scene.start(\"Preloader\");\n        }\n    }\n    MaintainableGame.Boot = Boot;\n})(MaintainableGame || (MaintainableGame = {}));\n///<reference path = \"SceneBase.ts\" />\nvar MaintainableGame;\n(function (MaintainableGame) {\n    class Menu extends MaintainableGame.SceneBase {\n        // --------------------------------------------------------------------\n        create() {\n            console.log(\"Menu\");\n            // bacground color\n            this.cameras.main.backgroundColor = Phaser.Display.Color.ValueToColor(0x808080);\n            // focus on 0, 0\n            this.setView();\n            // sound and music icons\n            this.addAudioControlls();\n            // add play button\n            this.addPlayButton();\n            // text\n            if (App.Config.SPONSOR_ASSOCIATION.length > 0) {\n                this.add.text(-this.gameWidth / 2 + 20, this.gameHeight / 2 - 30, App.Config.SPONSOR_ASSOCIATION);\n            }\n        }\n        // --------------------------------------------------------------------\n        addAudioControlls() {\n            let y = -this.gameHeight / 2 + 50;\n            // sound\n            let soundIconFrame = App.settings.soundOn ? \"IconSoundOn\" : \"IconSoundOff\";\n            let sound = this.add.sprite(-40, y, \"Sprites\", soundIconFrame);\n            sound.setInteractive();\n            sound.on(\"pointerdown\", function () {\n                App.settings.soundOn = !App.settings.soundOn;\n                sound.setFrame(App.settings.soundOn ? \"IconSoundOn\" : \"IconSoundOff\");\n                this.saveSettings();\n            }, this);\n            // music\n            let musicIconFrame = App.settings.musicOn ? \"IconMusicOn\" : \"IconMusicOff\";\n            let music = this.add.sprite(40, y, \"Sprites\", musicIconFrame);\n            music.setInteractive();\n            music.on(\"pointerdown\", function () {\n                App.settings.musicOn = !App.settings.musicOn;\n                music.setFrame(App.settings.musicOn ? \"IconMusicOn\" : \"IconMusicOff\");\n                this.saveSettings();\n            }, this);\n        }\n        // --------------------------------------------------------------------\n        addPlayButton() {\n            // play\n            let play = this.add.sprite(0, 0, \"Sprites\", \"IconPlay\");\n            play.setInteractive();\n            play.on(\"pointerdown\", function () {\n                this.startGame();\n            }, this);\n        }\n        // --------------------------------------------------------------------\n        saveSettings() {\n            Utils.StorageUtils.save(App.Config.SAVE_KEY, App.settings)\n                .then(function () {\n                console.log(\"Settings saved...\");\n            }).catch(function (e) {\n                console.log(e);\n            });\n        }\n        // --------------------------------------------------------------------\n        startGame() {\n            let self = this;\n            // report start of game\n            Sponsor.api.startGameSession()\n                .then(function () {\n                self.scene.start(\"Play\");\n            });\n        }\n    }\n    MaintainableGame.Menu = Menu;\n})(MaintainableGame || (MaintainableGame = {}));\n///<reference path = \"SceneBase.ts\" />\nvar MaintainableGame;\n(function (MaintainableGame) {\n    class Play extends MaintainableGame.SceneBase {\n        // --------------------------------------------------------------------\n        create() {\n            console.log(\"Play\");\n            // bacground color\n            this.cameras.main.backgroundColor = Phaser.Display.Color.ValueToColor(0xB8C6FF);\n            // focus on 0, 0\n            this.setView();\n            // back icon\n            this.addControlls();\n            // add some animation\n            this.buildScene();\n        }\n        // --------------------------------------------------------------------\n        addControlls() {\n            let y = -this.gameHeight / 2 + 50;\n            let x = -this.gameWidth / 2 + 50;\n            // menu icon\n            let menu = this.add.sprite(x, y, \"Sprites\", \"IconMenu\");\n            menu.setInteractive();\n            menu.on(\"pointerdown\", function () {\n                this.backToMenu();\n            }, this);\n        }\n        // --------------------------------------------------------------------\n        buildScene() {\n            // create pig animation if it does not exist\n            if (typeof this.anims.get(\"pig\") === \"undefined\") {\n                this.anims.create({\n                    key: \"pig\",\n                    frames: this.anims.generateFrameNames(\"Sprites\", { frames: [\"pig01\", \"pig02\", \"pig03\", \"pig04\", \"pig05\", \"pig06\", \"pig07\"] }),\n                    frameRate: 3,\n                    repeat: -1\n                });\n            }\n            // add pig sprite and play animation\n            let pig = this.add.sprite(0, 0, \"Sprites\");\n            pig.anims.play(\"pig\");\n        }\n        // --------------------------------------------------------------------\n        backToMenu() {\n            let self = this;\n            // report end of game\n            Sponsor.api.endGameSession({ score: 12345, level: 10 })\n                .then(function () {\n                self.scene.start(\"Menu\");\n            });\n            // some very special SBCGames function\n            if (Sponsor.is(Sponsor.eSponsorID.SBC_GAMES)) {\n                Sponsor.api.someVerySpecificSponsorFunction();\n            }\n        }\n    }\n    MaintainableGame.Play = Play;\n})(MaintainableGame || (MaintainableGame = {}));\n///<reference path = \"SceneBase.ts\" />\nvar MaintainableGame;\n(function (MaintainableGame) {\n    class Preloader extends MaintainableGame.SceneBase {\n        // --------------------------------------------------------------------\n        preload() {\n            console.log(\"Loading assets...\");\n            // load atlas with test sprites\n            this.load.atlas(\"Sprites\", \"assets/sprites/Sprites.png\", \"assets/sprites/Sprites.json\");\n        }\n        // --------------------------------------------------------------------\n        create() {\n            console.log(\"Preloader\");\n            let self = this;\n            // load user settings\n            Utils.StorageUtils.load(App.Config.SAVE_KEY)\n                .then(function (data) {\n                // if data is not null and not undefined\n                if (data != null) {\n                    App.settings = data;\n                    console.log(\"Settings loaded...\");\n                }\n                else {\n                    console.log(\"No saved settings.\");\n                }\n                // continue to menu\n                self.scene.start(\"Menu\");\n            });\n        }\n    }\n    MaintainableGame.Preloader = Preloader;\n})(MaintainableGame || (MaintainableGame = {}));\n\n\n//# sourceURL=webpack:///./src/App.ts?");

/***/ })

/******/ });